** 구조체 **
구조체란 서로 다른 자료형의 데이터를 하나의 그룹으로 묶은 자료형을 의미함.

typedef struct student_type
{
	char name[20];
	int year;
	float score;
}Student;

Student temp = {"sim", 2020, 100};



** 포인터 **
포인터 변수란 메모리 주소값을 저장하는 변수다.

포인터변수의 크기는 32bit 운영체제에서는 무조건 32bit가 될 것임. -> 주소를 나타내는 변수이기에



** 포인터를 이용한 동적 메모리 할당 **

동적 메모리 할당이란 프로그램 실행 도중 동적으로 메모리를 할당시키는 것인데
여기서 '동적'이란 할당될 메모리의 크기가 컴파일할 때 미리 정해져 있지 않았다는 의미이다.
-> 런타임에서 결정되게됨.
-> 코드가 다소 복잡해지며, 메모리 누수 문제가 생길 수 있다.

int *ptr = (int *)malloc(sizeof(int)*크기);

정적 메모리 할당이란 메모리의 크기를 미리 고정시켜서 할당하는 것을 말한다.
할당 시켜줘야 할 메모리의 한계 크기를 명확히 알고 있을 경우 사용한다.
-> 약간의 메모리 낭비가 있을 수 있지만, 메모리 누수 문제에서 자유롭다.



** 더블 포인터 **
포인터변수를 가리키는 포인터 변수를 의미한다.

int value = 100;
int *ptr_int = &value;
int **pptr_int = &ptr_int;

**pptr_int -> *ptr_int -> value

value = 100
ptr_int = value의 주소
*ptr_int = 100
pptr_int = ptr_int의 주소
*pptr_int = ptr_int = value의 주소
**pptr_int = 100

